# This GitHub Workflow will run basic AWS CLI based integ tests
# against the provided AWS account to validate API functionality
# continues to work as expected after deployments.
#
# Prerequisites:
# 1. Deploy CDK stacks to the provided AWS account.
# 2. Set up AWS CLI and local AWS credentials.
name: Run API Integ Tests
on:
  # Enable running workflow manually from GitHub Actions
  workflow_dispatch:
    # Require AWS account ID and region to be provided
    inputs:
      AWS_ACCOUNT_ID:
        description: AWS account to deploy to
        required: true
      AWS_REGION:
        description: AWS region to deploy to
        required: true

jobs:
  run-integ-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ github.event.inputs.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ github.event.inputs.AWS_ACCOUNT_ID }}:role/github-ci-role
      - name: Retrieve API Gateway ID for the Consent Management API
        id: get-consent-management-api-gateway-id
        run: |
          apiGatewayId=$(aws cloudformation list-exports \
            --region ${{ github.event.inputs.AWS_REGION }} \
            --query "Exports[?Name == 'ConsentManagementApiGatewayId'].Value" \
            | jq .[0])
          echo "CONSENT_MANAGEMENT_API_GATEWAY_ID=${apiGatewayId}" >> "$GITHUB_OUTPUT"
      - name: Get API Gateway resource IDs
        id: get-consent-management-api-resource-ids
        run: |
          apiGatewayResources=$(aws apigateway get-resources \
            --region ${{ github.event.inputs.AWS_REGION }} \
            --rest-api-id ${{ steps.get-consent-management-api-gateway-id.outputs.CONSENT_MANAGEMENT_API_GATEWAY_ID }})
          listServiceUserConsentsResourceId=$(echo $apiGatewayResources | jq '.items.[] | select(.path == "/v1/consent-management/services/{serviceId}/users/{userId}/consents") | .id')
          echo "LIST_API_RESOURCE_ID=${listServiceUserConsentsResourceId}" >> "$GITHUB_OUTPUT"
      - name: Invoke ListServiceUserConsents API
        run: |
          listApiResponse=$(aws apigateway test-invoke-method \
            --region ${{ github.event.inputs.AWS_REGION }} \
            --rest-api-id ${{ steps.get-consent-management-api-gateway-id.outputs.CONSENT_MANAGEMENT_API_GATEWAY_ID }} \
            --resource-id ${{ steps.get-consent-management-api-resource-ids.outputs.LIST_API_RESOURCE_ID }} \
            --http-method GET \
            --path-with-query-string "v1/consent-management/services/TestServiceId/users/TestUserId/consents")
          echo $listApiResponse
          if echo $listApiResponse | jq -e '.status == 200' > /dev/null; then
            echo "List API invocation succeeded"
          else
            echo "List API invocation failed"
            exit 1
          fi
