{
    "openapi": "3.0.2",
    "info": {
        "title": "Consent Management API",
        "version": "2024-06-10"
    },
    "paths": {
        "/v1/consent-management/services/{serviceId}/users/{userId}/consents": {
            "get": {
                "description": "List consents a user has granted to a given service.",
                "operationId": "ListServiceUserConsent",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Unique identifier for a service.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a service."
                        },
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Unique identifier for a user.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a user."
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Optional. Maximum number of Consents to return in a single response.",
                        "schema": {
                            "type": "integer",
                            "description": "Optional. Maximum number of Consents to return in a single response.",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "description": "Optional. The nextPageToken returned from the previous list request.",
                        "schema": {
                            "type": "string",
                            "description": "Optional. The nextPageToken returned from the previous list request."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListServiceUserConsent 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListServiceUserConsentResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a user Consent for a given service.",
                "operationId": "CreateServiceUserConsent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceUserConsentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Unique identifier for a service.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a service."
                        },
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Unique identifier for a user.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a user."
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateServiceUserConsent 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateServiceUserConsentResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ConflictingResourceException 409 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictingResourceExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/consent-management/services/{serviceId}/users/{userId}/consents/{consentId}": {
            "get": {
                "description": "Retrieve a user Consent for a given service.",
                "operationId": "GetServiceUserConsent",
                "parameters": [
                    {
                        "name": "consentId",
                        "in": "path",
                        "description": "Unique identifier for a Consent.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a Consent."
                        },
                        "required": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Unique identifier for a service.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a service."
                        },
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Unique identifier for a user.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a user."
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetServiceUserConsent 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetServiceUserConsentResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Update a user Consent for a given service.",
                "operationId": "UpdateServiceUserConsent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServiceUserConsentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "consentId",
                        "in": "path",
                        "description": "Unique identifier for a Consent.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a Consent."
                        },
                        "required": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Unique identifier for a service.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a service."
                        },
                        "required": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Unique identifier for a user.",
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier for a user."
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateServiceUserConsent 200 response"
                    },
                    "400": {
                        "description": "BadRequestException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NotFoundException 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ConflictingResourceException 409 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictingResourceExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServiceException 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServiceExceptionResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BadRequestExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when the request is invalid.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ConflictingResourceExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when a write request conflicts with stored state.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Consent": {
                "type": "object",
                "description": "Record of user consent.",
                "properties": {
                    "consentId": {
                        "type": "string",
                        "description": "Unique identifier for a Consent."
                    },
                    "consentVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Unique identifier for a user."
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "Unique identifier for a service."
                    },
                    "status": {
                        "$ref": "#/components/schemas/ConsentStatus"
                    },
                    "consentData": {
                        "$ref": "#/components/schemas/ConsentData"
                    },
                    "expiryTime": {
                        "type": "string",
                        "description": "Time when the Consent automatically expires, using the ISO 8601 format.",
                        "format": "date-time"
                    }
                },
                "required": [
                    "consentId",
                    "consentVersion",
                    "serviceId",
                    "status",
                    "userId"
                ]
            },
            "ConsentData": {
                "type": "object",
                "additionalProperties": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "maxProperties": 32,
                "description": "Consent data represented by string key-value pairs. Keys must be between 1-64 characters long, values must be between 1-256 characters long, and up to 32 key-value pairs may be provided."
            },
            "ConsentStatus": {
                "type": "string",
                "description": "Current status of a Consent.",
                "enum": [
                    "ACTIVE",
                    "EXPIRED",
                    "REVOKED"
                ]
            },
            "CreateServiceUserConsentRequestContent": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ConsentStatus"
                    },
                    "consentData": {
                        "$ref": "#/components/schemas/ConsentData"
                    },
                    "expiryTime": {
                        "type": "string",
                        "description": "Time when the Consent automatically expires, using the ISO 8601 format.",
                        "format": "date-time"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "CreateServiceUserConsentResponseContent": {
                "type": "object",
                "properties": {
                    "consentId": {
                        "type": "string",
                        "description": "Unique identifier for a Consent."
                    }
                },
                "required": [
                    "consentId"
                ]
            },
            "GetServiceUserConsentResponseContent": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Consent"
                    }
                }
            },
            "InternalServiceExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown on an unhandled service error.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ListServiceUserConsentResponseContent": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Consent"
                        },
                        "description": "Page of Consents"
                    },
                    "nextPageToken": {
                        "type": "string",
                        "description": "Pagination token to retrieve the next page of results."
                    }
                }
            },
            "NotFoundExceptionResponseContent": {
                "type": "object",
                "description": "This exception is thrown when the requested entity is not found.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UpdateServiceUserConsentRequestContent": {
                "type": "object",
                "properties": {
                    "consentVersion": {
                        "type": "integer",
                        "description": "Updated consent version, used to conditionally write only if the stored data has the prior version, to protect against race conditions or writing stale data.",
                        "format": "int32"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ConsentStatus"
                    },
                    "consentData": {
                        "$ref": "#/components/schemas/ConsentData"
                    },
                    "expiryTime": {
                        "type": "string",
                        "description": "Time when the Consent automatically expires, using the ISO 8601 format.",
                        "format": "date-time"
                    }
                },
                "required": [
                    "consentVersion"
                ]
            }
        }
    }
}
